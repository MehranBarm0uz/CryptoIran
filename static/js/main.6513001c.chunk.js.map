{"version":3,"sources":["services/cryptoApi.js","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","images/logo.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","className","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","id","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","demoImage","Text","Typography","Title","Option","Select","News","setNewsCategory","cryptoNews","console","log","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","index","style","maxWidth","maxHeight","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","element","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6513001c.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f0754424bamsh43beabc01aff534p1ac951jsn1810a4f7c592\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(\"/exchanges\"),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) =>\n        createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import { React, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport millify from \"millify\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nfunction Cryptocurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  //   console.log(cryptosList);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  //   console.log(cryptosList && cryptos);\n\n  //   loging data\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n  }, [cryptosList]);\n\n  //   search data\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) =>\n      item.name.toLowerCase().includes(searchTerm)\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link key={currency.id} to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"f0754424bamsh43beabc01aff534p1ac951jsn1810a4f7c592\",\n};\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport Loader from './Loader';\n\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nfunction News({ simplified }) {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  console.log(cryptoNews);\n\n\nif (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => (\n              <Option value={currency.name}>{currency.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, index) => (\n        <Col xs={24} sm={12} lg={8} key={index}>\n          <Card hoverable className=\"news-card\"  style = {{maxWidth:'400px' , maxHeight : '400px'}}>\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                style = {{maxWidth:'200px' , maxHeight : '200px'}}\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"\"\n                />\n              </div>\n              <p>\n                {news.description.length > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Cryptocurrencies from \"./Cryptocurrencies\";\nimport News from \"./News\";\nimport '../App.css';\n\nconst { Title } = Typography;\nfunction Homepage() {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Cryptocurrencies\"\n            value={globalStats && globalStats.total}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={globalStats && millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap:\"\n            value={globalStats && millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={globalStats && millify(globalStats.total24hVolume)}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={globalStats && millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptos In The World\n        </Title>\n        <Title level={3} className=\"show-more\" id='showmore'>\n          <Link to=\"/cryptocurrencies\">Show more</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} id='showmore'>\n          <Link to=\"/news\">Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/logo.f818c2f3.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\nimport '../App.css';\nimport icon from '../images/logo.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\" >\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\" ><Link id='logocrypto' to=\"/\">Crypto Iran</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nfunction Exchanges  () {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\nimport Chart from 'chart.js/auto';\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n// console.log(cryptoDetails.description); raw html elements!!\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Exchanges,\n  Homepage,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n  Navbar,\n} from \"./components\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Routes>\n              <Route exact path=\"/\" element={<Homepage />}></Route>\n              <Route path=\"/exchanges\" element={<Exchanges />}></Route>\n              <Route\n                path=\"/cryptocurrencies\"\n                element={<Cryptocurrencies />}\n              ></Route>\n              <Route path=\"/crypto/:coinId\" element={<CryptoDetails />}></Route>\n              <Route path=\"/news\" element={<News />}></Route>\n            </Routes>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Copyright © 2021\n            <Link id='logocrypto' to=\"/\">Crypto Iran</Link> <br />\n            All Rights Reserved by Mehran Barmouz.\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <Router>\n      <Provider store={store}>\n    <App />\n  </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}